// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.petstatistic.controller;

import com.petstatistic.controller.ApplicationConversionServiceFactoryBean;
import com.petstatistic.domain.Admin;
import com.petstatistic.domain.Device;
import com.petstatistic.domain.HistoryLog;
import com.petstatistic.domain.UsageState;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Admin, String> ApplicationConversionServiceFactoryBean.getAdminToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.petstatistic.domain.Admin, java.lang.String>() {
            public String convert(Admin admin) {
                return new StringBuilder().append(admin.getUserName()).append(' ').append(admin.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, Admin> ApplicationConversionServiceFactoryBean.getIdToAdminConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.petstatistic.domain.Admin>() {
            public com.petstatistic.domain.Admin convert(java.lang.Long id) {
                return Admin.findAdmin(id);
            }
        };
    }
    
    public Converter<String, Admin> ApplicationConversionServiceFactoryBean.getStringToAdminConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.petstatistic.domain.Admin>() {
            public com.petstatistic.domain.Admin convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Admin.class);
            }
        };
    }
    
    public Converter<Device, String> ApplicationConversionServiceFactoryBean.getDeviceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.petstatistic.domain.Device, java.lang.String>() {
            public String convert(Device device) {
                return new StringBuilder().append(device.getMac()).append(' ').append(device.getImei()).append(' ').append(device.getCreateTime()).append(' ').append(device.getChannel()).toString();
            }
        };
    }
    
    public Converter<Long, Device> ApplicationConversionServiceFactoryBean.getIdToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.petstatistic.domain.Device>() {
            public com.petstatistic.domain.Device convert(java.lang.Long id) {
                return Device.findDevice(id);
            }
        };
    }
    
    public Converter<String, Device> ApplicationConversionServiceFactoryBean.getStringToDeviceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.petstatistic.domain.Device>() {
            public com.petstatistic.domain.Device convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Device.class);
            }
        };
    }
    
    public Converter<HistoryLog, String> ApplicationConversionServiceFactoryBean.getHistoryLogToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.petstatistic.domain.HistoryLog, java.lang.String>() {
            public String convert(HistoryLog historyLog) {
                return new StringBuilder().append(historyLog.getUserId()).append(' ').append(historyLog.getHistoryDate()).append(' ').append(historyLog.getConnectTimes()).toString();
            }
        };
    }
    
    public Converter<Long, HistoryLog> ApplicationConversionServiceFactoryBean.getIdToHistoryLogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.petstatistic.domain.HistoryLog>() {
            public com.petstatistic.domain.HistoryLog convert(java.lang.Long id) {
                return HistoryLog.findHistoryLog(id);
            }
        };
    }
    
    public Converter<String, HistoryLog> ApplicationConversionServiceFactoryBean.getStringToHistoryLogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.petstatistic.domain.HistoryLog>() {
            public com.petstatistic.domain.HistoryLog convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), HistoryLog.class);
            }
        };
    }
    
    public Converter<UsageState, String> ApplicationConversionServiceFactoryBean.getUsageStateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.petstatistic.domain.UsageState, java.lang.String>() {
            public String convert(UsageState usageState) {
                return new StringBuilder().append(usageState.getLastConnectTime()).append(' ').append(usageState.getUserId()).toString();
            }
        };
    }
    
    public Converter<Long, UsageState> ApplicationConversionServiceFactoryBean.getIdToUsageStateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.petstatistic.domain.UsageState>() {
            public com.petstatistic.domain.UsageState convert(java.lang.Long id) {
                return UsageState.findUsageState(id);
            }
        };
    }
    
    public Converter<String, UsageState> ApplicationConversionServiceFactoryBean.getStringToUsageStateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.petstatistic.domain.UsageState>() {
            public com.petstatistic.domain.UsageState convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), UsageState.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAdminToStringConverter());
        registry.addConverter(getIdToAdminConverter());
        registry.addConverter(getStringToAdminConverter());
        registry.addConverter(getDeviceToStringConverter());
        registry.addConverter(getIdToDeviceConverter());
        registry.addConverter(getStringToDeviceConverter());
        registry.addConverter(getHistoryLogToStringConverter());
        registry.addConverter(getIdToHistoryLogConverter());
        registry.addConverter(getStringToHistoryLogConverter());
        registry.addConverter(getUsageStateToStringConverter());
        registry.addConverter(getIdToUsageStateConverter());
        registry.addConverter(getStringToUsageStateConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
